name: CD

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:

jobs:

  contentful-webhook-cd:
    name: Contentful Webhook CD
    defaults:
      run:
        working-directory: contentful-webhook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint
      - run: npm run typecheck
      - run: npm test
      - run: npm run build
      - run: npm run package
      - name: Upload function deployment package to S3
        run: aws s3 cp contentful-webhook.zip s3://$DEPLOYMENT_BUCKET_NAME
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DEPLOYMENT_BUCKET_NAME: ${{ secrets.DEPLOYMENT_BUCKET_NAME }}
      - name: Update function code
        run: aws lambda update-function-code --function-name $CONTENTFUL_WEBHOOK_FUNCTION_NAME --s3-bucket $DEPLOYMENT_BUCKET_NAME --s3-key contentful-webhook.zip > /dev/null
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CONTENTFUL_WEBHOOK_FUNCTION_NAME: ${{ secrets.CONTENTFUL_WEBHOOK_FUNCTION_NAME }}
          DEPLOYMENT_BUCKET_NAME: ${{ secrets.DEPLOYMENT_BUCKET_NAME }}

  update-github-cd:
    name: Update GitHub CD
    defaults:
      run:
        working-directory: update-github
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint
      - run: npm run typecheck
      - run: npm test
      - run: npm run build
      - run: npm run package
      - name: Upload function deployment package to S3
        run: aws s3 cp update-github.zip s3://$DEPLOYMENT_BUCKET_NAME
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DEPLOYMENT_BUCKET_NAME: ${{ secrets.DEPLOYMENT_BUCKET_NAME }}
      - name: Update function code
        run: aws lambda update-function-code --function-name $UPDATE_GITHUB_FUNCTION_NAME --s3-bucket $DEPLOYMENT_BUCKET_NAME --s3-key update-github.zip > /dev/null
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DEPLOYMENT_BUCKET_NAME: ${{ secrets.DEPLOYMENT_BUCKET_NAME }}
          UPDATE_GITHUB_FUNCTION_NAME: ${{ secrets.UPDATE_GITHUB_FUNCTION_NAME }}

  web-app-cd:
    name: Web App CD
    defaults:
      run:
        working-directory: web-app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint
      - run: npm run typecheck
      - run: npm test
      - run: npm run build
        env:
          LAMBDA_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          LAMBDA_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          LAMBDA_REGION: ${{ secrets.AWS_REGION }}
          LAMBDA_USE_POLICY: false
          LAMBDA_USE_TMPDIR: false
          LAMBDA_DISTRIBUTION_ID: distributionId
          LAMBDA_INVALIDATION_PATH: /*
          LAMBDA_WEB_APP_BUCKET_NAME: webAppBucketName
          CMS_DOLPH_PAGE_COMPONENT_TYPE: ${{ secrets.WEB_APP_CMS_DOLPH_PAGE_COMPONENT_TYPE }}
          CMS_EDUCATION_PAGE_COMPONENT_TYPE: ${{ secrets.WEB_APP_CMS_EDUCATION_PAGE_COMPONENT_TYPE }}
          CMS_HOME_PAGE_COMPONENT_TYPE: ${{ secrets.WEB_APP_CMS_HOME_PAGE_COMPONENT_TYPE }}
          DATA_BUCKET_NAME: ${{ secrets.DATA_BUCKET_NAME }}
          DATA_GITHUB_FILE_KEY: ${{ secrets.DATA_GITHUB_FILE_KEY }}
          SECRET_ARN: ${{ secrets.SECRET_ARN }}
          SECRET_WEB_APP_CMS_CLIENT_ACCESS_TOKEN_KEY: WEB_APP_CMS_CLIENT_ACCESS_TOKEN
          SECRET_WEB_APP_CMS_CLIENT_SPACE_KEY: WEB_APP_CMS_CLIENT_SPACE
          BABEL_DISABLE_CACHE: 1
      - name: Retrieve authentication token and authenticate Docker client to registry
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Build Docker image
        run: docker build -t $WEB_APP_REPOSITORY .
        env:
          WEB_APP_REPOSITORY: ${{ secrets.WEB_APP_REPOSITORY }}
      - name: Tag Docker image
        run: docker tag $WEB_APP_REPOSITORY:latest $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$WEB_APP_REPOSITORY:latest
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          WEB_APP_REPOSITORY: ${{ secrets.WEB_APP_REPOSITORY }}
      - name: Push Docker image to repository
        run: docker push $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$WEB_APP_REPOSITORY:latest
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          WEB_APP_REPOSITORY: ${{ secrets.WEB_APP_REPOSITORY }}
      - name: Update function code
        run: aws lambda update-function-code --function-name $WEB_APP_FUNCTION_NAME --image-uri $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$WEB_APP_REPOSITORY:latest > /dev/null
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          WEB_APP_FUNCTION_NAME: ${{ secrets.WEB_APP_FUNCTION_NAME }}
          WEB_APP_REPOSITORY: ${{ secrets.WEB_APP_REPOSITORY }}
