{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Outputs": {
    "ContentfulWebhookUrl": {
      "Value": {
        "Fn::GetAtt": [
          "ContentfulWebhookUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ContentfulWebhookUrl"
        }
      }
    }
  },
  "Parameters": {
    "DataS3GitHubFileKey": {
      "Description": "S3 GitHub File Key in Data bucket",
      "Default": "github.json",
      "Type": "String"
    },
    "DistributionStackName": {
      "Description": "Name of previously deployed \"Distribution\" CloudFormation Stack",
      "Type": "String"
    },
    "PersistentStackName": {
      "Description": "Name of previously deployed \"Persistent\" CloudFormation Stack",
      "Type": "String"
    },
    "UpdateGitHubGitHubBaseUrl": {
      "Description": "GitHub Base URL for Update GitHub function",
      "Default": "https://api.github.com",
      "Type": "String"
    },
    "WebAppCloudFrontInvalidationPath": {
      "Description": "Invalidation Path for Web App CloudFront Distribution to invalidate after static site generation done by Web App function ",
      "Default": "/*",
      "Type": "String"
    },
    "WebAppCmsDolphPageComponentType": {
      "Description": "CMS \"Dolph Page\" Component Type for Web App function",
      "Default": "dolphPage",
      "Type": "String"
    },
    "WebAppCmsHomePageComponentType": {
      "Description": "CMS \"Home Page\" Component Type for Web App function",
      "Default": "homePage",
      "Type": "String"
    }
  },
  "Resources": {
    "UpdateGitHubRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-update-github-rule"
        },
        "ScheduleExpression": "rate(1 day)",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "UpdateGitHubFunction",
                "Arn"
              ]
            },
            "Id": "UpdateGitHubRuleTarget"
          }
        ]
      }
    },
    "CdPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": {
          "Fn::Sub": "${AWS::StackName}-cd-policy"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": [
                    "${DeploymentBucketArn}/contentful-webhook.zip",
                    {
                      "DeploymentBucketArn": {
                        "Fn::ImportValue": {
                          "Fn::Sub": "${PersistentStackName}-DeploymentBucketArn"
                        }
                      }
                    }
                  ]
                },
                {
                  "Fn::Sub": [
                    "${DeploymentBucketArn}/update-github.zip",
                    {
                      "DeploymentBucketArn": {
                        "Fn::ImportValue": {
                          "Fn::Sub": "${PersistentStackName}-DeploymentBucketArn"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "Action": "lambda:UpdateFunctionCode",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ContentfulWebhook",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "UpdateGitHubFunction",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "WebAppFunction",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": {
                  "Fn::Sub": "${PersistentStackName}-SecretArn"
                }
              }
            },
            {
              "Action": [
                "s3:ListBucket",
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                  }
                },
                {
                  "Fn::Sub": [
                    "${DataBucketArn}/${DataS3GitHubFileKey}",
                    {
                      "DataBucketArn": {
                        "Fn::ImportValue": {
                          "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:CompleteLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:InitiateLayerUpload",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": {
                  "Fn::Sub": "${PersistentStackName}-WebAppRepositoryArn"
                }
              }
            }
          ]
        }
      }
    },
    "DevPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": {
          "Fn::Sub": "${AWS::StackName}-dev-policy"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": {
                  "Fn::Sub": "${PersistentStackName}-SecretArn"
                }
              }
            },
            {
              "Action": [
                "s3:ListBucket",
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                  }
                },
                {
                  "Fn::Sub": [
                    "${DataBucketArn}/${DataS3GitHubFileKey}",
                    {
                      "DataBucketArn": {
                        "Fn::ImportValue": {
                          "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:CompleteLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:InitiateLayerUpload",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": {
                  "Fn::Sub": "${PersistentStackName}-WebAppRepositoryArn"
                }
              }
            },
            {
              "Action": [
                "s3:ListBucket",
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": "${PersistentStackName}-WebAppBucketArn"
                  }
                },
                {
                  "Fn::Sub": [
                    "${WebAppBucketArn}/*",
                    {
                      "WebAppBucketArn": {
                        "Fn::ImportValue": {
                          "Fn::Sub": "${PersistentStackName}-WebAppBucketArn"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "Action": "cloudfront:CreateInvalidation",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:cloudfront::${AWS::AccountId}:distribution/${DistributionId}",
                  {
                    "DistributionId": {
                      "Fn::ImportValue": {
                        "Fn::Sub": "${DistributionStackName}-DistributionId"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "ContentfulWebhookRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-contentful-webhook"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "secretsmanager:GetSecretValue",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${PersistentStackName}-SecretArn"
                    }
                  }
                },
                {
                  "Action": "sqs:SendMessage",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${PersistentStackName}-QueueArn"
                    }
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-contentful-webhook-role"
        }
      }
    },
    "UpdateGitHubFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-update-github-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "secretsmanager:GetSecretValue",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${PersistentStackName}-SecretArn"
                    }
                  }
                },
                {
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetObject",
                    "s3:PutObject"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::ImportValue": {
                        "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                      }
                    },
                    {
                      "Fn::Sub": [
                        "${DataBucketArn}/${DataS3GitHubFileKey}",
                        {
                          "DataBucketArn": {
                            "Fn::ImportValue": {
                              "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-update-github-function-role"
        }
      }
    },
    "WebAppFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-web-app-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "secretsmanager:GetSecretValue",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${PersistentStackName}-SecretArn"
                    }
                  }
                },
                {
                  "Action": [
                    "sqs:GetQueueAttributes",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${PersistentStackName}-QueueArn"
                    }
                  }
                },
                {
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::ImportValue": {
                        "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                      }
                    },
                    {
                      "Fn::Sub": [
                        "${DataBucketArn}/${DataS3GitHubFileKey}",
                        {
                          "DataBucketArn": {
                            "Fn::ImportValue": {
                              "Fn::Sub": "${PersistentStackName}-DataBucketArn"
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::ImportValue": {
                        "Fn::Sub": "${PersistentStackName}-WebAppBucketArn"
                      }
                    },
                    {
                      "Fn::Sub": [
                        "${WebAppBucketArn}/*",
                        {
                          "WebAppBucketArn": {
                            "Fn::ImportValue": {
                              "Fn::Sub": "${PersistentStackName}-WebAppBucketArn"
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "Action": "cloudfront:CreateInvalidation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:cloudfront::${AWS::AccountId}:distribution/${DistributionId}",
                      {
                        "DistributionId": {
                          "Fn::ImportValue": {
                            "Fn::Sub": "${DistributionStackName}-DistributionId"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-web-app-function-role"
        }
      }
    },
    "CdUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "ManagedPolicyArns": [
          {
            "Ref": "CdPolicy"
          }
        ],
        "UserName": {
          "Fn::Sub": "${AWS::StackName}-cd-user"
        }
      }
    },
    "DevUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "ManagedPolicyArns": [
          {
            "Ref": "DevPolicy"
          }
        ],
        "UserName": {
          "Fn::Sub": "${AWS::StackName}-dev-user"
        }
      }
    },
    "WebAppFunctionEventSourceMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 10000,
        "EventSourceArn": {
          "Fn::ImportValue": {
            "Fn::Sub": "${PersistentStackName}-QueueArn"
          }
        },
        "FunctionName": {
          "Ref": "WebAppFunction"
        },
        "MaximumBatchingWindowInSeconds": 300
      }
    },
    "ContentfulWebhook": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "S3Bucket": {
            "Fn::ImportValue": {
              "Fn::Sub": "${PersistentStackName}-DeploymentBucketName"
            }
          },
          "S3Key": "contentful-webhook.zip"
        },
        "Environment": {
          "Variables": {
            "SECRET_ARN": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PersistentStackName}-SecretArn"
              }
            },
            "SECRET_AUTH_PASSWORD_KEY": "CONTENTFUL_WEBHOOK_AUTH_PASSWORD",
            "SECRET_AUTH_USERNAME_KEY": "CONTENTFUL_WEBHOOK_AUTH_USERNAME",
            "SQS_QUEUE_URL": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PersistentStackName}-QueueUrl"
              }
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-contentful-webhook"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ContentfulWebhookRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x",
        "Timeout": 60
      }
    },
    "UpdateGitHubFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "S3Bucket": {
            "Fn::ImportValue": {
              "Fn::Sub": "${PersistentStackName}-DeploymentBucketName"
            }
          },
          "S3Key": "update-github.zip"
        },
        "Environment": {
          "Variables": {
            "DATA_S3_BUCKET_NAME": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PersistentStackName}-DataBucketName"
              }
            },
            "DATA_S3_GITHUB_FILE_KEY": {
              "Ref": "DataS3GitHubFileKey"
            },
            "GITHUB_BASE_URL": {
              "Ref": "UpdateGitHubGitHubBaseUrl"
            },
            "SECRET_ARN": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PersistentStackName}-SecretArn"
              }
            },
            "SECRET_GITHUB_PERSONAL_ACCESS_TOKEN_KEY": "UPDATE_GITHUB_GITHUB_PERSONAL_ACCESS_TOKEN"
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-update-github-function"
        },
        "Handler": "index.handler",
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "UpdateGitHubFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x",
        "Timeout": 60
      }
    },
    "WebAppFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ImageUri": {
            "Fn::Sub": [
              "${WebAppRepositoryUri}:latest",
              {
                "WebAppRepositoryUri": {
                  "Fn::ImportValue": {
                    "Fn::Sub": "${PersistentStackName}-WebAppRepositoryUri"
                  }
                }
              }
            ]
          }
        },
        "Environment": {
          "Variables": {
            "LAMBDA_ACCESS_KEY_ID": "",
            "LAMBDA_SECRET_ACCESS_KEY": "",
            "LAMBDA_REGION": {
              "Ref": "AWS::Region"
            },
            "LAMBDA_USE_POLICY": "true",
            "LAMBDA_USE_TMPDIR": "true",
            "LAMBDA_CLOUDFRONT_DISTRIBUTION_ID": {
              "Fn::ImportValue": {
                "Fn::Sub": "${DistributionStackName}-DistributionId"
              }
            },
            "LAMBDA_CLOUDFRONT_INVALIDATION_PATH": {
              "Ref": "WebAppCloudFrontInvalidationPath"
            },
            "LAMBDA_WEB_APP_S3_BUCKET_NAME": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PersistentStackName}-WebAppBucketName"
              }
            },
            "CMS_DOLPH_PAGE_COMPONENT_TYPE": {
              "Ref": "WebAppCmsDolphPageComponentType"
            },
            "CMS_HOME_PAGE_COMPONENT_TYPE": {
              "Ref": "WebAppCmsHomePageComponentType"
            },
            "DATA_S3_BUCKET_NAME": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PersistentStackName}-DataBucketName"
              }
            },
            "DATA_S3_GITHUB_FILE_KEY": {
              "Ref": "DataS3GitHubFileKey"
            },
            "SECRET_ARN": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PersistentStackName}-SecretArn"
              }
            },
            "SECRET_CMS_CLIENT_ACCESS_TOKEN_KEY": "WEB_APP_CMS_CLIENT_ACCESS_TOKEN",
            "SECRET_CMS_CLIENT_SPACE_KEY": "WEB_APP_CMS_CLIENT_SPACE",
            "BABEL_DISABLE_CACHE": "1",
            "NPM_CONFIG_CACHE": "/tmp/.npm"
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-web-app-function"
        },
        "MemorySize": 2048,
        "PackageType": "Image",
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "WebAppFunctionRole",
            "Arn"
          ]
        },
        "Timeout": 900
      }
    },
    "ContentfulWebhookPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunctionUrl",
        "FunctionName": {
          "Ref": "ContentfulWebhook"
        },
        "FunctionUrlAuthType": "NONE",
        "Principal": "*"
      }
    },
    "UpdateGitHubRulePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "UpdateGitHubFunction"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "UpdateGitHubRule",
            "Arn"
          ]
        }
      }
    },
    "ContentfulWebhookUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Ref": "ContentfulWebhook"
        }
      }
    }
  }
}
